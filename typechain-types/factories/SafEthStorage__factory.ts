/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SafEthStorage, SafEthStorageInterface } from "../SafEthStorage";

const _abi = [
  {
    inputs: [],
    name: "derivativeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "contract IDerivative",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseStaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseUnstaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101bd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5f163ff1161005b578063b5f163ff146100dd578063c0046e39146100fd578063cde8f85114610158578063f999c5061461016157600080fd5b80631c4e6ab71461008d5780635f48f393146100b457806396c82e57146100cb5780639b2cb5d8146100d4575b600080fd5b60005461009f90610100900460ff1681565b60405190151581526020015b60405180910390f35b6100bd60045481565b6040519081526020016100ab565b6100bd60025481565b6100bd60035481565b6100bd6100eb36600461016e565b60066020526000908152604090205481565b61013361010b36600461016e565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ab565b6100bd60015481565b60005461009f9060ff1681565b60006020828403121561018057600080fd5b503591905056fea264697066735822122052ca4fe93fce70e2388ccdda87436457e98f4f4881463df0468e031ab33a146164736f6c634300080d0033";

type SafEthStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafEthStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafEthStorage__factory extends ContractFactory {
  constructor(...args: SafEthStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafEthStorage> {
    return super.deploy(overrides || {}) as Promise<SafEthStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafEthStorage {
    return super.attach(address) as SafEthStorage;
  }
  connect(signer: Signer): SafEthStorage__factory {
    return super.connect(signer) as SafEthStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafEthStorageInterface {
    return new utils.Interface(_abi) as SafEthStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafEthStorage {
    return new Contract(address, _abi, signerOrProvider) as SafEthStorage;
  }
}
