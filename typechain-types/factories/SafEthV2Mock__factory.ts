/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SafEthV2Mock, SafEthV2MockInterface } from "../SafEthV2Mock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    name: "ChangeMaxAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "ChangeMinAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "DerivativeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Rebalanced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
    ],
    name: "SetMaxSlippage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "safEthOut",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "StakingPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "safEthIn",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "UnstakingPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "WeightChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_weight",
        type: "uint256",
      },
    ],
    name: "addDerivative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_derivativeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_weight",
        type: "uint256",
      },
    ],
    name: "adjustWeight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "adminWithdrawDerivative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "adminWithdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "derivativeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "contract IDerivative",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "newFunctionCalled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseStaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseUnstaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceToWeights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxAmount",
        type: "uint256",
      },
    ],
    name: "setMaxAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_derivativeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
    ],
    name: "setMaxSlippage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
    ],
    name: "setMinAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_pause",
        type: "bool",
      },
    ],
    name: "setPauseStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_pause",
        type: "bool",
      },
    ],
    name: "setPauseUnstaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_safEthAmount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612c4780620000f46000396000f3fe60806040526004361061026e5760003560e01c8063715018a611610153578063b5f163ff116100cb578063d5b7f6061161007f578063e1aa320f11610064578063e1aa320f1461073f578063f2fde38b14610759578063f999c5061461077957600080fd5b8063d5b7f606146106cc578063dd62ed3e146106ec57600080fd5b8063c0046e39116100b0578063c0046e391461065e578063cde8f851146106a1578063d416c096146106b757600080fd5b8063b5f163ff14610611578063b9c849b61461063e57600080fd5b806396c82e5711610122578063a457c2d711610107578063a457c2d7146105b1578063a57e3b10146105d1578063a9059cbb146105f157600080fd5b806396c82e57146105855780639b2cb5d81461059b57600080fd5b8063715018a6146104ef578063897b0637146105045780638da5cb5b1461052457806395d89b411461057057600080fd5b806339509351116101e65780634fe47f70116101b55780635f48f3931161019a5780635f48f393146104765780636d49e0b61461048c57806370a08231146104ac57600080fd5b80634fe47f70146104365780635e7cc5831461045657600080fd5b806339509351146103ce5780633a4b66f1146103ee5780633a9b5422146103f65780634cd88b761461041657600080fd5b80631c4e6ab71161023d5780632e17de78116102225780632e17de7814610372578063313ce5671461039257806337d90a8f146103ae57600080fd5b80631c4e6ab71461033357806323b872dd1461035257600080fd5b806306fdde031461027a578063095ea7b3146102a557806318160ddd146102d55780631b28d63e146102f457600080fd5b3661027557005b600080fd5b34801561028657600080fd5b5061028f610793565b60405161029c919061277f565b60405180910390f35b3480156102b157600080fd5b506102c56102c036600461281b565b610825565b604051901515815260200161029c565b3480156102e157600080fd5b506035545b60405190815260200161029c565b34801561030057600080fd5b50610331609e80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b005b34801561033f57600080fd5b506097546102c590610100900460ff1681565b34801561035e57600080fd5b506102c561036d366004612845565b61083d565b34801561037e57600080fd5b5061033161038d366004612881565b610861565b34801561039e57600080fd5b506040516012815260200161029c565b3480156103ba57600080fd5b506103316103c936600461281b565b610b6c565b3480156103da57600080fd5b506102c56103e936600461281b565b610c10565b610331610c5c565b34801561040257600080fd5b5061033161041136600461289a565b6111e7565b34801561042257600080fd5b50610331610431366004612996565b611284565b34801561044257600080fd5b50610331610451366004612881565b611442565b34801561046257600080fd5b5061033161047136600461289a565b61147d565b34801561048257600080fd5b506102e6609b5481565b34801561049857600080fd5b506103316104a7366004612a08565b611554565b3480156104b857600080fd5b506102e66104c7366004612a2c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526033602052604090205490565b3480156104fb57600080fd5b506103316115bf565b34801561051057600080fd5b5061033161051f366004612881565b6115d3565b34801561053057600080fd5b5060655473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161029c565b34801561057c57600080fd5b5061028f61160e565b34801561059157600080fd5b506102e660995481565b3480156105a757600080fd5b506102e6609a5481565b3480156105bd57600080fd5b506102c56105cc36600461281b565b61161d565b3480156105dd57600080fd5b506103316105ec36600461281b565b6116ee565b3480156105fd57600080fd5b506102c561060c36600461281b565b611809565b34801561061d57600080fd5b506102e661062c366004612881565b609d6020526000908152604090205481565b34801561064a57600080fd5b5061033161065936600461289a565b611817565b34801561066a57600080fd5b5061054b610679366004612881565b609c6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156106ad57600080fd5b506102e660985481565b3480156106c357600080fd5b506103316118a1565b3480156106d857600080fd5b506103316106e7366004612a08565b611bac565b3480156106f857600080fd5b506102e6610707366004612a47565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260346020908152604080832093909416825291909152205490565b34801561074b57600080fd5b50609e546102c59060ff1681565b34801561076557600080fd5b50610331610774366004612a2c565b611c20565b34801561078557600080fd5b506097546102c59060ff1681565b6060603680546107a290612a7a565b80601f01602080910402602001604051908101604052809291908181526020018280546107ce90612a7a565b801561081b5780601f106107f05761010080835404028352916020019161081b565b820191906000526020600020905b8154815290600101906020018083116107fe57829003601f168201915b5050505050905090565b600033610833818585611cd7565b5060019392505050565b60003361084b858285611e8a565b610856858585611f61565b506001949350505050565b609754610100900460ff16156108d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f756e7374616b696e67206973207061757365640000000000000000000000000060448201526064015b60405180910390fd5b60006108e360355490565b90504760005b609854811015610a5c576000818152609c602090815260408083205481517fb69ef8a800000000000000000000000000000000000000000000000000000000815291518793899373ffffffffffffffffffffffffffffffffffffffff9093169263b69ef8a892600480830193928290030181865afa15801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109939190612acd565b61099d9190612b15565b6109a79190612b52565b9050806000036109b75750610a4a565b6000828152609c6020526040908190205490517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690632e1a7d4d90602401600060405180830381600087803b158015610a3057600080fd5b505af1158015610a44573d6000803e3d6000fd5b50505050505b80610a5481612b8d565b9150506108e9565b50610a6733846121d7565b476000610a748383612bc5565b604051909150600090339083908381818185875af1925050503d8060008114610ab9576040519150601f19603f3d011682016040523d82523d6000602084013e610abe565b606091505b5050905080610b29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016108cf565b604080518381526020810188905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e910160405180910390a2505050505050565b610b7461239d565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb906044016020604051808303816000875af1158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b9190612bdc565b505050565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906108339082908690610c57908790612bf9565b611cd7565b60975460ff1615610cc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f7374616b696e672069732070617573656400000000000000000000000000000060448201526064016108cf565b609a54341015610d35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f616d6f756e7420746f6f206c6f7700000000000000000000000000000000000060448201526064016108cf565b609b54341115610da1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f616d6f756e7420746f6f2068696768000000000000000000000000000000000060448201526064016108cf565b6000805b609854811015610f8d576000818152609c60209081526040918290205482517fb69ef8a80000000000000000000000000000000000000000000000000000000081529251670de0b6b3a76400009373ffffffffffffffffffffffffffffffffffffffff9092169263b69ef8a892600480820193918290030181865afa158015610e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e569190612acd565b6000838152609c60209081526040918290205482517fb69ef8a8000000000000000000000000000000000000000000000000000000008152925173ffffffffffffffffffffffffffffffffffffffff90911692632bd6de1d92849263b69ef8a89260048082019392918290030181865afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc9190612acd565b6040518263ffffffff1660e01b8152600401610f1a91815260200190565b602060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b9190612acd565b610f659190612b15565b610f6f9190612b52565b610f799083612bf9565b915080610f8581612b8d565b915050610da5565b506000610f9960355490565b9050600081600003610fb45750670de0b6b3a7640000610fd4565b81610fc784670de0b6b3a7640000612b15565b610fd19190612b52565b90505b6000805b609854811015611179576000818152609d6020908152604080832054609c909252822054909173ffffffffffffffffffffffffffffffffffffffff90911690829003611025575050611167565b6099546000906110358434612b15565b61103f9190612b52565b905060008273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b815260040160206040518083038185885af1158015611090573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110b59190612acd565b90506000670de0b6b3a7640000828573ffffffffffffffffffffffffffffffffffffffff16632bd6de1d856040518263ffffffff1660e01b81526004016110fe91815260200190565b602060405180830381865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f9190612acd565b6111499190612b15565b6111539190612b52565b905061115f8188612bf9565b965050505050505b8061117181612b8d565b915050610fd8565b5060008261118f83670de0b6b3a7640000612b15565b6111999190612b52565b90506111a5338261241e565b604080513481526020810183905233917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a25050505050565b6111ef61239d565b6000828152609c6020526040908190205490517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690632e1a7d4d90602401600060405180830381600087803b15801561126857600080fd5b505af115801561127c573d6000803e3d6000fd5b505050505050565b600054610100900460ff16158080156112a45750600054600160ff909116105b806112be5750303b1580156112be575060005460ff166001145b61134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016108cf565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156113a857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6113b28383612514565b6113bb336125b5565b6503782dace9d9609a557103025f39ef241c56cd2e7c40000000000000609b558015610c0b57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b61144a61239d565b609b81905560405181907f13cad1d1f9bc3464ddf35ddde5e0389a9edf9639f97e2fccb7e59fdeb5dcad2290600090a250565b61148561239d565b6000828152609c6020526040908190205490517f43f68a490000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff909116906343f68a4990602401600060405180830381600087803b1580156114fe57600080fd5b505af1158015611512573d6000803e3d6000fd5b50505050817f69bd9725c402dd1e5e9d8a2323132cb3943d9dc10cb4747a89e05cda452bfe9f8260405161154891815260200190565b60405180910390a25050565b61155c61239d565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682151590811790915560405160ff9091161515907f3cf4fe733160f8f8c48336fab32acee32ebaaa423a08a2be4e5ceff97dd98c6990600090a250565b6115c761239d565b6115d160006125b5565b565b6115db61239d565b609a81905560405181907fbb1711a6693c8a2dfb14b13f0a1468cb1042b91bfe4e3a4b3e3d280aa255ece290600090a250565b6060603780546107a290612a7a565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156116e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016108cf565b6108568286868403611cd7565b6116f661239d565b609880546000908152609c6020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881617905583548352609d90915281208390558154919061176483612b8d565b91905055506000805b6098548110156117a4576000818152609d60205260409020546117909083612bf9565b91508061179c81612b8d565b91505061176d565b50609981905560985460405173ffffffffffffffffffffffffffffffffffffffff8516917f7801a492c794d930101c8993235226b79be1216f9855e30c0615d22fdd22bb44916117fc91868252602082015260400190565b60405180910390a2505050565b600033610833818585611f61565b61181f61239d565b6000828152609d60205260408120829055805b609854811015611869576000818152609d60205260409020546118559083612bf9565b91508061186181612b8d565b915050611832565b50609981905560405182815283907faf36c6f4d67b41fb74b801bfd0a1f6e579c68ff0cc464663a49f3c6112d9b93d906020016117fc565b6118a961239d565b4760005b609854811015611a62576000818152609c602090815260408083205481517fb69ef8a8000000000000000000000000000000000000000000000000000000008152915173ffffffffffffffffffffffffffffffffffffffff9091169263b69ef8a892600480820193918290030181865afa15801561192f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119539190612acd565b1115611a50576000818152609c60209081526040918290205482517fb69ef8a8000000000000000000000000000000000000000000000000000000008152925173ffffffffffffffffffffffffffffffffffffffff90911692632e1a7d4d92849263b69ef8a89260048082019392918290030181865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff9190612acd565b6040518263ffffffff1660e01b8152600401611a1d91815260200190565b600060405180830381600087803b158015611a3757600080fd5b505af1158015611a4b573d6000803e3d6000fd5b505050505b80611a5a81612b8d565b9150506118ad565b50476000611a708383612bc5565b905060005b609854811015611b7d576000818152609d60205260409020541580611a98575081155b611b6b576099546000828152609d6020526040812054909190611abb9085612b15565b611ac59190612b52565b6000838152609c60209081526040918290205482517fd0e30db0000000000000000000000000000000000000000000000000000000008152925193945073ffffffffffffffffffffffffffffffffffffffff169263d0e30db09285926004808301939192829003018185885af1158015611b43573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611b689190612acd565b50505b80611b7581612b8d565b915050611a75565b506040517fc741dbaad15a4f298fe8d80943fa8e005e7bcb2f5b0a0c8dec1fc35be457f14690600090a1505050565b611bb461239d565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101008315158102919091179182905560405160ff91909204161515907f0c7f3357f9df485f4d8a04f45e87783b560f907fc7d2f72b4377ca33aa49308e90600090a250565b611c2861239d565b73ffffffffffffffffffffffffffffffffffffffff8116611ccb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016108cf565b611cd4816125b5565b50565b73ffffffffffffffffffffffffffffffffffffffff8316611d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016108cf565b73ffffffffffffffffffffffffffffffffffffffff8216611e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016108cf565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152603460209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611f5b5781811015611f4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108cf565b611f5b8484848403611cd7565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316612004576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016108cf565b73ffffffffffffffffffffffffffffffffffffffff82166120a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016108cf565b73ffffffffffffffffffffffffffffffffffffffff83166000908152603360205260409020548181101561215d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016108cf565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906121ca9086815260200190565b60405180910390a3611f5b565b73ffffffffffffffffffffffffffffffffffffffff821661227a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016108cf565b73ffffffffffffffffffffffffffffffffffffffff821660009081526033602052604090205481811015612330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016108cf565b73ffffffffffffffffffffffffffffffffffffffff831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60655473ffffffffffffffffffffffffffffffffffffffff1633146115d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108cf565b73ffffffffffffffffffffffffffffffffffffffff821661249b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108cf565b80603560008282546124ad9190612bf9565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b5050565b600054610100900460ff166125ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016108cf565b612510828261262c565b6065805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166126c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016108cf565b81516126d69060369060208501906126e6565b508051610c0b9060379060208401905b8280546126f290612a7a565b90600052602060002090601f016020900481019282612714576000855561275a565b82601f1061272d57805160ff191683800117855561275a565b8280016001018555821561275a579182015b8281111561275a57825182559160200191906001019061273f565b5061276692915061276a565b5090565b5b80821115612766576000815560010161276b565b600060208083528351808285015260005b818110156127ac57858101830151858201604001528201612790565b818111156127be576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461281657600080fd5b919050565b6000806040838503121561282e57600080fd5b612837836127f2565b946020939093013593505050565b60008060006060848603121561285a57600080fd5b612863846127f2565b9250612871602085016127f2565b9150604084013590509250925092565b60006020828403121561289357600080fd5b5035919050565b600080604083850312156128ad57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126128fc57600080fd5b813567ffffffffffffffff80821115612917576129176128bc565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561295d5761295d6128bc565b8160405283815286602085880101111561297657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156129a957600080fd5b823567ffffffffffffffff808211156129c157600080fd5b6129cd868387016128eb565b935060208501359150808211156129e357600080fd5b506129f0858286016128eb565b9150509250929050565b8015158114611cd457600080fd5b600060208284031215612a1a57600080fd5b8135612a25816129fa565b9392505050565b600060208284031215612a3e57600080fd5b612a25826127f2565b60008060408385031215612a5a57600080fd5b612a63836127f2565b9150612a71602084016127f2565b90509250929050565b600181811c90821680612a8e57607f821691505b602082108103612ac7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612adf57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b4d57612b4d612ae6565b500290565b600082612b88577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612bbe57612bbe612ae6565b5060010190565b600082821015612bd757612bd7612ae6565b500390565b600060208284031215612bee57600080fd5b8151612a25816129fa565b60008219821115612c0c57612c0c612ae6565b50019056fea2646970667358221220e2211572a37ef604e7c23e4105a36afdd9ef15ecd571d931222536cc3952bfe464736f6c634300080d0033";

type SafEthV2MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafEthV2MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafEthV2Mock__factory extends ContractFactory {
  constructor(...args: SafEthV2MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafEthV2Mock> {
    return super.deploy(overrides || {}) as Promise<SafEthV2Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafEthV2Mock {
    return super.attach(address) as SafEthV2Mock;
  }
  connect(signer: Signer): SafEthV2Mock__factory {
    return super.connect(signer) as SafEthV2Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafEthV2MockInterface {
    return new utils.Interface(_abi) as SafEthV2MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafEthV2Mock {
    return new Contract(address, _abi, signerOrProvider) as SafEthV2Mock;
  }
}
