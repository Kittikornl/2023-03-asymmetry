/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DerivativeMock,
  DerivativeMockInterface,
} from "../DerivativeMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FRX_ETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FRX_ETH_CRV_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FRX_ETH_MINTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SFRX_ETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ethPerDerivative",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
    ],
    name: "setMaxSlippage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61135c806100ed6000396000f3fe6080604052600436106100f75760003560e01c8063853828b61161008a578063c4d66de811610059578063c4d66de8146102e5578063d0e30db014610305578063e36e4e061461030d578063f2fde38b1461033557600080fd5b8063853828b61461027a5780638c04166f1461028f5780638da5cb5b146102a5578063b69ef8a8146102d057600080fd5b80632e1a7d4d116100c65780632e1a7d4d146101fb5780633025f3a11461021d57806343f68a4914610245578063715018a61461026557600080fd5b806306fdde0314610103578063083a5525146101585780631450eb12146101a55780632bd6de1d146101cd57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b50604080518082018252600481527f46726178000000000000000000000000000000000000000000000000000000006020820152905161014f919061116b565b60405180910390f35b34801561016457600080fd5b5061018073bafa44efe7901e04e39dad13167d089c559c113881565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014f565b3480156101b157600080fd5b50610180735e8422345238f34275888049021821e8e08caa1f81565b3480156101d957600080fd5b506101ed6101e83660046111de565b610355565b60405190815260200161014f565b34801561020757600080fd5b5061021b6102163660046111de565b610496565b005b34801561022957600080fd5b5061018073ac3e018457b222d93114458476f3e3416abbe38f81565b34801561025157600080fd5b5061021b6102603660046111de565b610838565b34801561027157600080fd5b5061021b610845565b34801561028657600080fd5b5061021b610859565b34801561029b57600080fd5b506101ed60655481565b3480156102b157600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610180565b3480156102dc57600080fd5b506101ed610ba2565b3480156102f157600080fd5b5061021b6103003660046111f7565b610c36565b6101ed610dd4565b34801561031957600080fd5b5061018073a1f8a6807c402e4a15ef4eba36528a3fed24e57781565b34801561034157600080fd5b5061021b6103503660046111f7565b610fbc565b6040517f07a2d13a000000000000000000000000000000000000000000000000000000008152670de0b6b3a76400006004820152600090819073ac3e018457b222d93114458476f3e3416abbe38f906307a2d13a90602401602060405180830381865afa1580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee919061122d565b905073a1f8a6807c402e4a15ef4eba36528a3fed24e57773ffffffffffffffffffffffffffffffffffffffff166386fc88d36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610473919061122d565b61048582670de0b6b3a7640000611275565b61048f91906112b2565b9392505050565b61049e611073565b6040517fba087652000000000000000000000000000000000000000000000000000000008152600481018290523060248201819052604482015273ac3e018457b222d93114458476f3e3416abbe38f9063ba087652906064016020604051808303816000875af1158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053a919061122d565b506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090735e8422345238f34275888049021821e8e08caa1f906370a0823190602401602060405180830381865afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca919061122d565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273a1f8a6807c402e4a15ef4eba36528a3fed24e577600482015260248101829052909150735e8422345238f34275888049021821e8e08caa1f9063095ea7b3906044016020604051808303816000875af1158015610652573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067691906112ed565b506000670de0b6b3a7640000606554670de0b6b3a7640000610698919061130f565b670de0b6b3a7640000856106ab87610355565b6106b59190611275565b6106bf91906112b2565b6106c99190611275565b6106d391906112b2565b6040517f3df021240000000000000000000000000000000000000000000000000000000081526001600482015260006024820152604481018490526064810182905290915073a1f8a6807c402e4a15ef4eba36528a3fed24e57790633df02124906084016020604051808303816000875af1158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a919061122d565b50604051600090339047908381818185875af1925050503d80600081146107bd576040519150601f19603f3d011682016040523d82523d6000602084013e6107c2565b606091505b5050905080610832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064015b60405180910390fd5b50505050565b610840611073565b606555565b61084d611073565b61085760006110f4565b565b610861611073565b73ac3e018457b222d93114458476f3e3416abbe38f63ba087652610883610ba2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152306024820181905260448201526064016020604051808303816000875af11580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090a919061122d565b506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090735e8422345238f34275888049021821e8e08caa1f906370a0823190602401602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a919061122d565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273a1f8a6807c402e4a15ef4eba36528a3fed24e577600482015260248101829052909150735e8422345238f34275888049021821e8e08caa1f9063095ea7b3906044016020604051808303816000875af1158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4691906112ed565b506040517f3df021240000000000000000000000000000000000000000000000000000000081526001600482015260006024820181905260448201839052606482015273a1f8a6807c402e4a15ef4eba36528a3fed24e57790633df02124906084016020604051808303816000875af1158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb919061122d565b50604051600090339047908381818185875af1925050503d8060008114610b2e576040519150601f19603f3d011682016040523d82523d6000602084013e610b33565b606091505b5050905080610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610829565b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ac3e018457b222d93114458476f3e3416abbe38f906370a0823190602401602060405180830381865afa158015610c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c31919061122d565b905090565b600054610100900460ff1615808015610c565750600054600160ff909116105b80610c705750303b158015610c70575060005460ff166001145b610cfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610829565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610d5a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610d63826110f4565b662386f26fc100006065558015610b9e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6000610dde611073565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273bafa44efe7901e04e39dad13167d089c559c11389060009073ac3e018457b222d93114458476f3e3416abbe38f906370a0823190602401602060405180830381865afa158015610e5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e83919061122d565b6040517f4dcd454700000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff831690634dcd454790349060240160206040518083038185885af1158015610ef3573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f18919061122d565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ac3e018457b222d93114458476f3e3416abbe38f906370a0823190602401602060405180830381865afa158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa8919061122d565b9050610fb4828261130f565b935050505090565b610fc4611073565b73ffffffffffffffffffffffffffffffffffffffff8116611067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610829565b611070816110f4565b50565b60335473ffffffffffffffffffffffffffffffffffffffff163314610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610829565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156111985785810183015185820160400152820161117c565b818111156111aa576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000602082840312156111f057600080fd5b5035919050565b60006020828403121561120957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461048f57600080fd5b60006020828403121561123f57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112ad576112ad611246565b500290565b6000826112e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156112ff57600080fd5b8151801515811461048f57600080fd5b60008282101561132157611321611246565b50039056fea2646970667358221220cbd16ba69e56620ad0b1d5bd34ee1f7920a58baeef37594424a9fe1fd2a8d40564736f6c634300080d0033";

type DerivativeMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DerivativeMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DerivativeMock__factory extends ContractFactory {
  constructor(...args: DerivativeMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DerivativeMock> {
    return super.deploy(overrides || {}) as Promise<DerivativeMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DerivativeMock {
    return super.attach(address) as DerivativeMock;
  }
  connect(signer: Signer): DerivativeMock__factory {
    return super.connect(signer) as DerivativeMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DerivativeMockInterface {
    return new utils.Interface(_abi) as DerivativeMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DerivativeMock {
    return new Contract(address, _abi, signerOrProvider) as DerivativeMock;
  }
}
