{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "indexed": true,
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        }
      ],
      "name": "FeeAmountEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        }
      ],
      "name": "enableFeeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "feeAmountTickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createPool(address,address,uint24)": "a1671295",
    "enableFeeAmount(uint24,int24)": "8a7c195f",
    "feeAmountTickSpacing(uint24)": "22afcccb",
    "getPool(address,address,uint24)": "1698ee82",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/uniswap/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/uniswap/IUniswapV3Factory.sol\":{\"keccak256\":\"0x294f89fec3d7455e8554dc9783f8766f82396d36ea49197e37c32769a1d6b9e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92a18440898d23e8fbdaf64a4260e63ed1d7a8659e500be80808b29babb515af\",\"dweb:/ipfs/QmXcQLLYiruWti37xgqAdxPw8o7QfYfcNGfjXkJZYLK1Z9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeAmountEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableFeeAmount"
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "feeAmountTickSpacing",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createPool(address,address,uint24)": {
            "details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
            "params": {
              "fee": "The desired fee for the pool",
              "tokenA": "One of the two tokens in the desired pool",
              "tokenB": "The other of the two tokens in the desired pool"
            },
            "returns": {
              "pool": "The address of the newly created pool"
            }
          },
          "enableFeeAmount(uint24,int24)": {
            "details": "Fee amounts may never be removed once enabled",
            "params": {
              "fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
              "tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
            }
          },
          "feeAmountTickSpacing(uint24)": {
            "details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
            "params": {
              "fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
            },
            "returns": {
              "_0": "The tick spacing"
            }
          },
          "getPool(address,address,uint24)": {
            "details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
            "params": {
              "fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
              "tokenA": "The contract address of either token0 or token1",
              "tokenB": "The contract address of the other token"
            },
            "returns": {
              "pool": "The pool address"
            }
          },
          "owner()": {
            "details": "Can be changed by the current owner via setOwner",
            "returns": {
              "_0": "The address of the factory owner"
            }
          },
          "setOwner(address)": {
            "details": "Must be called by the current owner",
            "params": {
              "_owner": "The new owner of the factory"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createPool(address,address,uint24)": {
            "notice": "Creates a pool for the given two tokens and fee"
          },
          "enableFeeAmount(uint24,int24)": {
            "notice": "Enables a fee amount with the given tickSpacing"
          },
          "feeAmountTickSpacing(uint24)": {
            "notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
          },
          "getPool(address,address,uint24)": {
            "notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
          },
          "owner()": {
            "notice": "Returns the current owner of the factory"
          },
          "setOwner(address)": {
            "notice": "Updates the owner of the factory"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/uniswap/IUniswapV3Factory.sol": "IUniswapV3Factory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/uniswap/IUniswapV3Factory.sol": {
        "keccak256": "0x294f89fec3d7455e8554dc9783f8766f82396d36ea49197e37c32769a1d6b9e2",
        "urls": [
          "bzz-raw://92a18440898d23e8fbdaf64a4260e63ed1d7a8659e500be80808b29babb515af",
          "dweb:/ipfs/QmXcQLLYiruWti37xgqAdxPw8o7QfYfcNGfjXkJZYLK1Z9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/uniswap/IUniswapV3Factory.sol",
    "id": 2673,
    "exportedSymbols": {
      "IUniswapV3Factory": [
        2672
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3995:19",
    "nodes": [
      {
        "id": 2591,
        "nodeType": "PragmaDirective",
        "src": "32:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 2672,
        "nodeType": "ContractDefinition",
        "src": "221:3805:19",
        "nodes": [
          {
            "id": 2599,
            "nodeType": "EventDefinition",
            "src": "445:71:19",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 2593,
              "nodeType": "StructuredDocumentation",
              "src": "255:185:19",
              "text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
            },
            "eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
            "name": "OwnerChanged",
            "nameLocation": "451:12:19",
            "parameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2595,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "480:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2599,
                  "src": "464:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2597,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "506:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2599,
                  "src": "490:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:52:19"
            }
          },
          {
            "id": 2612,
            "nodeType": "EventDefinition",
            "src": "948:165:19",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 2600,
              "nodeType": "StructuredDocumentation",
              "src": "522:421:19",
              "text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
            },
            "eventSelector": "783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118",
            "name": "PoolCreated",
            "nameLocation": "954:11:19",
            "parameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2602,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "991:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2612,
                  "src": "975:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2604,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "1023:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2612,
                  "src": "1007:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2606,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1054:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2612,
                  "src": "1039:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2608,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tickSpacing",
                  "nameLocation": "1073:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2612,
                  "src": "1067:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2607,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "1102:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2612,
                  "src": "1094:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:147:19"
            }
          },
          {
            "id": 2619,
            "nodeType": "EventDefinition",
            "src": "1399:70:19",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 2613,
              "nodeType": "StructuredDocumentation",
              "src": "1119:275:19",
              "text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
            },
            "eventSelector": "c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
            "name": "FeeAmountEnabled",
            "nameLocation": "1405:16:19",
            "parameters": {
              "id": 2618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1437:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2619,
                  "src": "1422:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2617,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tickSpacing",
                  "nameLocation": "1456:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2619,
                  "src": "1442:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:47:19"
            }
          },
          {
            "id": 2625,
            "nodeType": "FunctionDefinition",
            "src": "1643:49:19",
            "nodes": [],
            "documentation": {
              "id": 2620,
              "nodeType": "StructuredDocumentation",
              "src": "1475:163:19",
              "text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
            },
            "functionSelector": "8da5cb5b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "1652:5:19",
            "parameters": {
              "id": 2621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1657:2:19"
            },
            "returnParameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "1683:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1682:9:19"
            },
            "scope": 2672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2633,
            "nodeType": "FunctionDefinition",
            "src": "2051:72:19",
            "nodes": [],
            "documentation": {
              "id": 2626,
              "nodeType": "StructuredDocumentation",
              "src": "1698:348:19",
              "text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
            },
            "functionSelector": "22afcccb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "feeAmountTickSpacing",
            "nameLocation": "2060:20:19",
            "parameters": {
              "id": 2629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2088:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "2081:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2627,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2080:12:19"
            },
            "returnParameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "2116:5:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:7:19"
            },
            "scope": 2672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2645,
            "nodeType": "FunctionDefinition",
            "src": "2605:128:19",
            "nodes": [],
            "documentation": {
              "id": 2634,
              "nodeType": "StructuredDocumentation",
              "src": "2129:471:19",
              "text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
            },
            "functionSelector": "1698ee82",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "nameLocation": "2614:7:19",
            "parameters": {
              "id": 2641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2636,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2639:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2645,
                  "src": "2631:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2638,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2663:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2645,
                  "src": "2655:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2640,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2686:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2645,
                  "src": "2679:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2639,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2621:74:19"
            },
            "returnParameters": {
              "id": 2644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2643,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "2727:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2645,
                  "src": "2719:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2718:14:19"
            },
            "scope": 2672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2657,
            "nodeType": "FunctionDefinition",
            "src": "3298:126:19",
            "nodes": [],
            "documentation": {
              "id": 2646,
              "nodeType": "StructuredDocumentation",
              "src": "2739:554:19",
              "text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
            },
            "functionSelector": "a1671295",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nameLocation": "3307:10:19",
            "parameters": {
              "id": 2653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2648,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3335:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "3327:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3327:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2650,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3359:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "3351:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2652,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3382:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "3375:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2651,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3317:74:19"
            },
            "returnParameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2655,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "3418:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "3410:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3409:14:19"
            },
            "scope": 2672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2663,
            "nodeType": "FunctionDefinition",
            "src": "3579:43:19",
            "nodes": [],
            "documentation": {
              "id": 2658,
              "nodeType": "StructuredDocumentation",
              "src": "3430:144:19",
              "text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
            },
            "functionSelector": "13af4035",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOwner",
            "nameLocation": "3588:8:19",
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2660,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3605:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2663,
                  "src": "3597:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3596:16:19"
            },
            "returnParameters": {
              "id": 2662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3621:0:19"
            },
            "scope": 2672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2671,
            "nodeType": "FunctionDefinition",
            "src": "3959:65:19",
            "nodes": [],
            "documentation": {
              "id": 2664,
              "nodeType": "StructuredDocumentation",
              "src": "3628:326:19",
              "text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
            },
            "functionSelector": "8a7c195f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enableFeeAmount",
            "nameLocation": "3968:15:19",
            "parameters": {
              "id": 2669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2666,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3991:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "3984:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2665,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3984:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2668,
                  "mutability": "mutable",
                  "name": "tickSpacing",
                  "nameLocation": "4002:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "3996:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2667,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3996:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3983:31:19"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4023:0:19"
            },
            "scope": 2672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IUniswapV3Factory",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2592,
          "nodeType": "StructuredDocumentation",
          "src": "58:163:19",
          "text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          2672
        ],
        "name": "IUniswapV3Factory",
        "nameLocation": "231:17:19",
        "scope": 2673,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}